<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- <link rel="icon" href="/static/favicon.ico" type="image/x-icon">
    <link rel="shortcut icon" href="/static/favicon.ico" type="image/x-icon"> -->
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
          integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">

    <!-- Font Awesome CSS -->
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.js"
            integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
            integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"
            integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s"
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.4.0/socket.io.js"></script>

    <link href="/static/mystyle.css" rel="stylesheet">
    <title>게시글 수정하기</title>
    <script>
        let userId
        $(document).ready(function () {
            //비회원,회원 전부 볼 수 있어야하기 때문에 에러가 발생하지 않아야한다.
            if (localStorage.getItem("token")) {
                getSelf(function(user) {
                    userId = user.userId
                    $(`#btnModify${userId}`).show()
                })
            }
            getComments()
        })
        
        //해당 게시글의 모든 Comments를 조회
        function getComments() {
            //URL의 Depth가 바뀐다면 split Array 인자로 수정해야한다.
            const postId = location.pathname.split("/")[2]
            const token = localStorage.getItem("token")
            $('#comment_body').empty()

            $.ajax({
                type:"GET",
                url : `/api/comments/${postId}`,
                headers: {
                    authorization:`Bearer ${token}`,
                },
                data : {token},
                success: function (response) {
                    const comments = response['comments']
                    const tokenUserId = reponse['userId'] //reponse['userId']가 존재하지 않을 경우 undefined를 설정

                    for (const commentObject of comments) {
                        makeComment(commentObject, tokenUserId)
                    }
                },
                error: function(error) {
                    console.error(error.responseJSON.errorMessage)
                },
            })
        }

        function modifyCommentShow(commentId) {
            $(`#comment${commentId}`).hide()
            $(`#commentIcon${commentId}`).hide()

            $(`commentDiv${commentId}`).show()

            const commentText = $(`#comment${commentId}`).text().trim()
            $(`#commentInput${commentId}`).val(commentText)
        }

        function modifyCommentHide(commentId) {
            $(`#comment${commentId}`).show()
            $(`#commentIcon${commentId}`).show()

            $(`#commentDiv${commentId}`).hide()
        }

        //댓글 수정
        function modifyComment(commentId) {
            const comment = $(`#commentInput${commentId}`).val()
            if(!comment) {
                console.log(comment)
                alert("댓글 내용이 존재하지 않습니다.")
                return
            }

            $.ajax({
                type: "PUT",
                url: `/api/comments/${commentId}`,
                headers: {
                    authorization: `Bearer ${localStorage('token')}`,
                },
                data: {comment},
                success: function (response) {
                    console.log(response)
                },
                error: function(error) {
                    console.error(error.responseJSON.errorMessage)
                },
            })
            $(`#comment${commentId}`).text(comment)
            modifyCommentHide(commentId)
        }
        //댓글 삭제
        function deleteComment(commentId) {
            if (confirm("댓글을 삭제하시겠습니까?")) {
                $.ajax({
                    type: "DELETE",
                    url: `/api/comments/${commentId}`,
                    headers: {
                        authorization: `Bearer ${localStorage.getItem("token")}`
                    },
                    data: {},
                    success: function(response) {
                        $(`#commentBody${commentId}`).hide()
                    },
                    error: function(error) {
                        console.error(error.responseJSON.errorMessage)
                        alert(error.responseJSON.errorMessage)
                    },
                })
            }
        }

        // 댓글을 UI에 그려주는 함수
    function makeComment(commentObject, tokenUserId) {
        const {commentId, nickname, comment, userId} = commentObject;
        // 접속한 userId와 댓글 userId가 같을 경우
        if (userId == tokenUserId) {
            const temp_html = `
            <tr id="commentBody${commentId}">
                <td scope="col">${nickname}</td>
                <td scope="col" id="comment${commentId}">${comment}
                </td>
                <td id="commentIcon${commentId}">
                    <i class="fa fa-pencil" aria-hidden="true" onclick="modifyCommentShow(${commentId})"></i>
                    <i class="fa fa-times" aria-hidden="true" onclick="deleteComment(${commentId})"></i>
                </td>

                <td colspan="2">
                <div id="commentDiv${commentId}" class="input-group mb-3" style="display: none">
                  <input id="commentInput${commentId}" type="text" class="form-control" aria-label="Recipient's username" aria-describedby="basic-addon2">
                  <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="button" onclick="modifyComment(${commentId})">저장</button>
                  </div>
                </div>
                </td>
            </tr>`
            $('#commentTableBody').append(temp_html)

        } else { // 접속한 userId와 댓글 userId가 다를 경우
            const temp_html = `<tr>
                <td scope="col">${nickname}</td>
                <td scope="col">${comment}</td>
                <td></td>
            </tr>`
            $('#commentTableBody').append(temp_html)
        }
    }

    // 댓글 작성
    function writeComment() {
        const comment = $('#comment').val()
        const postId = location.pathname.split("/")[2]

        if (!comment) {
            alert("댓글 내용을 입력 해주세요.")
            return;
        }
        $.ajax({
            type: "POST",
            url: `/api/comments/${postId}`,
            headers: {
                authorization: `Bearer ${localStorage.getItem('token')}`,
            },
            data: {comment},
            success: function (response) { //새로고침
                location.href = location.href
                history.go(0);
            },
            error: function (error) {
                alert(error.responseJSON.errorMessage)
            },
        });
    }

    function loginCheck() {
        if (!localStorage.getItem("token")) {
            alert("로그인이 필요한 기능입니다.")
            location.href = "/login"
        }
    }

    function modifyPost() {
        const postId = location.pathname.split("/")[2]
        location.href = `/modify/${postId}`
    }

    //     function modify_post() {
    //         const user = $('#user').val()
    //         const title = $('#title').val()

    //         const password = $('#password').val() // TODO crypto를 이용해 암호화 필요
    //         const content = $('#content').val()
    //         const comment = $('#comment').val()
    //         const _id = location.pathname.split('/')[2]

    //         $.ajax({
    //             type: "PUT",
    //             url: `/api/posts/${_id}`,
    //             data: {user, title, password, content, comment},
    //             success: (response) => {
    //                 alert(response.result);
    //                 location.href = `/`
    //             },
    //             error: function (error) {
    //                 console.log(error.status);
    //                 if (error.status == 406) {
    //                     alert('패스워드가 일치하지 않습니다.')
    //                 } else if (error.status == 400) {
    //                     alert('API 호출에 실패하였습니다.')
    //                 }
    //             },
    //         })
    //     }

    //     function delete_post() {
    //         const password = $('#password').val()
    //         let _id = location.pathname.split("/")[4]
    //         $.ajax({
    //             type: "DELETE",
    //             url: `/api/modify/${_id}`,
    //             data: {password},
    //             success: (response) => {
    //                 console.log(password)
    //                 alert(response.result);
    //                 location.href = `/`
    //             },
    //             error: function (error) {
    //                 console.log(error.status);
    //                 console.log(password);
    //                 if (error.status == 406) {
    //                     alert('패스워드가 일치하지 않습니다.')
    //                 } else if (error.status == 400) {
    //                     alert('API 호출에 실패하였습니다.')
    //                 }
    //             },
    //         })
    //     }
    //     function modify_comment() {
    //         const comment = $('#comment').val()
    //         const title = $('#title').val()

    //         const password = $('#password').val() // TODO crypto를 이용해 암호화 필요
    //         const content = $('#content').val()
    //         let address = unescape(location.href)
    //         let _id = location.pathname.split('/')[4]

    //         $.ajax({
    //             type: "PUT",
    //             url: `/api/posts/${_id}`,
    //             headers: {
    //                 authorization: `Bearer ${localStorage.getItem(user, token)}`,
    //             },
    //             data: {comment},
                
    //             success: (response) => {
    //                 function loginCheck() {
    //                 if (!localStorage.getItem(user, token)) {
    //                 if (_id) {
    //                 alert("로그인이 필요한 기능입니다.")
    //                 console.log(_id)
    //                 location.href = '/login'
    //                 }
    //             }
    //                 alert(response.result);
    //                 location.href = `/`
    //             }
    //             error: function (error) {
    //                 console.log(error.status);
    //                 console.log('hi');
    //                 if (!user) {
    //                     console.log(_id)
    //                     alert('로그인 후 이용해주세요')
    //                     location.href = `/`
                        
    //                 } else if (error.status == 400) {
    //                     console.log(_id)
    //                     alert('API 호출에 실패하였습니다.')
    //                 }
    //             }
    //         }
    //     })
    // }    
    </script>
    <style>

        html {
            overflow: auto;
        }
    </style>
</head>

<body>
<nav class="navbar navbar-expand-sm navbar-dark bg-sparta justify-content-end">
    <a class="navbar-brand" href="/">
        <!-- <img src="/static/logo_big_tr.png" width="30" height="30" class="d-inline-block align-top" alt=""> -->
        황인호의 개인 블로그
    </a>
    <button class="navbar-toggler ml-auto" type="button" data-toggle="collapse"
            data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="true"
            aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>
    <div class="navbar-collapse collapse flex-grow-0 ml-auto" id="navbarSupportedContent" style="">
        <ul class="navbar-nav mr-auto text-right">
            <li class="nav-item" id="link-cart">
                <a class="nav-link" onclick="modifyComment()">
                    수정완료
                </a>
            </li>
            <li class="nav-item" id="link-cart">
                <a class="nav-link" onclick="location.href='/'">
                    취소
                </a>
            </li>
            <li class="nav-item" id="link-cart">
                <a class="nav-link" onclick="deleteComment()">
                    삭제
                </a>
            </li>
        </ul>
    </div>

</nav>
<div class="wrap">

    <div class="container">
        <div class="d-flex justify-content-between align-items-end">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1">제목</span>
                </div>
                <input id="title" type="text" class="form-control" placeholder="" aria-label=""
                       aria-describedby="basic-addon1" value="<%= title %>">
            </div>
        </div>
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1">입력자</span>
            </div>
            <input id="user" type="text" class="form-control" placeholder="" aria-label=""
                   aria-describedby="basic-addon1" value="<%= user %>">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1">비밀번호</span>
            </div>
            <input id="password" type="password" class="form-control" placeholder="" aria-label=""
                   aria-describedby="basic-addon1">
        </div>
        <hr>
        <!-- <div class="form-group">
            <span class="input-group-text" id="basic-addon1">content</span>
            <textarea class="form-control" id="content" rows="3" ><%= content %></textarea>
        </div> -->
        <div class="d-flex justify-content-between align-items-end">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1">내용</span>
                </div>
                <textarea id="content" type="text" class="form-control" placeholder="" aria-label=""
                       aria-describedby="basic-addon1" value="<%= content %>"></textarea>
            </div>
        </div>
        <div class="d-flex justify-content-between align-items-end">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1">댓글</span>
                </div>
                <textarea id="comment" type="text" class="form-control" placeholder="" aria-label=""
                       aria-describedby="basic-addon1" value="<%= content %>" onclick="loginCheck()"></textarea>
                       <a class="nav-link" id="comment" onclick="modify_comment()"><button class="btn btn-primary">작성</button></a>
            </div>
        </div>
    </div>


</div>


</body>

</html>