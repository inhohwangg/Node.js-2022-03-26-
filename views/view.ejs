<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- <link rel="icon" href="/static/favicon.ico" type="image/x-icon">
    <link rel="shortcut icon" href="/static/favicon.ico" type="image/x-icon"> -->
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
        integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">

    <!-- Font Awesome CSS -->
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.js"
        integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
        integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"
        integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.4.0/socket.io.js"></script>

    <link href="/static/mystyle.css" rel="stylesheet">
    <title>게시글 보기</title>
    <script>
        let userId;
        $(document).ready(function () {
            get_posts()
            // 비회원, 회원 전부 볼 수 있어야하기 때문에 에러가 발생하지 않아야한다.
            if (localStorage.getItem("token")) {
                getSelf(function (user) {
                    userId = user.userId;
                    $(`#btnModify${userId}`).show()
                })
            }
            getComments()
        });

        // 해당 게시글의 모든 Comments를 조회
        function getComments() {
            //URL의 Depth가 바뀐다면 split Array 인자도 수정해야한다.
            const postId = location.pathname.split("/")[2]
            const token = localStorage.getItem("token");
            $('#comment_body').empty();

            $.ajax({
                type: "GET",
                url: `/api/comment/${postId}`,
                headers: {
                    authorization: `Bearer ${token}`,
                },
                data: { token },
                success: function (response) {
                    const comment = response['comment'];
                    const tokenemailId = response['emailId']; //response['userId']가 존재하지 않을 경우 undefined를 설정

                    for (const commentObject of comment) {
                        makeComment(commentObject, tokenemailId)
                    }
                },
                error: function (error) {
                    console.error(error.responseJSON.errorMessage);
                },
            });
        }

        // function modifyCommentShow(commentId) {
        //     $(`#comment${commentId}`).hide()
        //     $(`#commentIcon${commentId}`).hide()

        //     $(`#commentDiv${commentId}`).show()

        //     const commentText = $(`#comment${commentId}`).text().trim();
        //     $(`#commentInput${commentId}`).val(commentText)
        // }

        // function modifyCommentHide(commentId) {
        //     $(`#comment${commentId}`).show()
        //     $(`#commentIcon${commentId}`).show()

        //     $(`#commentDiv${commentId}`).hide()
        // }

        $(document).ready(function () {
        })

        // 댓글 삭제
        function deleteComment(commentId) {
            if (confirm("댓글을 삭제하시겠습니까?")) {
                $.ajax({
                    type: "DELETE",
                    url: `/api/posts/${commentId}`,
                    headers: {
                        authorization: `Bearer ${localStorage.getItem("token")}`
                    },
                    data: {commentId},
                    success: function (response) {
                        console.log(response)
                        // $(`#commentBody${commentId}`).hide()
                    },
                    error: function (error) {
                        console.error(error.responseJSON.errorMessage);
                        alert(error.responseJSON.errorMessage)
                    },
                });
            }

        }

        // function modifyPost() {
        //     const postId = location.pathname.split("/")[2]
        //     location.href = `/modify/${postId}`
        // }

        // function modify_post() {
        //     let pathName = location.pathname.split("/")[2]
        //     console.log(pathName)
        //     location.href = `/modify/${pathName}`
        // }

        //댓글 작성하기
        function writeComment() {
            const authorization = `Bearer ${localStorage.getItem('token')}`
            const comment = $('#comment').val()
            const email = $('#email').val()
            const postId = location.pathname.split("/")[2]
            // console.log("드가니?")
            // console.log(comment)
            // console.log(authorization)
            // console.log(postId)
            if (!comment) {
                alert("댓글 내용을 입력 해주세요.")
                return;
            } else {
                $.ajax({
                    type: "POST",
                    url: `/api/posts/${postId}`,
                    contentType: "application/json",
                    headers: {
                        authorization: `Bearer ${localStorage.getItem('token')}`,
                    },
                    data: JSON.stringify({
                        comment: comment,
                        number: postId,
                    }),
                    success: function (response) { //새로고침
                        console.log("들어가니??")
                        location.href = "/";
                        history.go(0);
                    },
                    error: function (error) {
                        alert(error.responseJSON.errorMessage)
                    },
                });
            }
        }

        function loginCheck() {
            if (!localStorage.getItem("token")) {
                alert("로그인이 필요한 기능입니다.")
                location.href = "/login"
            }
        }

        function get_posts() {
            const postId = location.pathname.split("/")[2]
            console.log(postId)
            $('#tbody-box').empty() // 상품창의 리스트를 삭제한다.
            // const emails = localStorage.getItem("email")
            // console.log(emails)
            $.ajax({
                type: "GET",
                url: `/api/posts/${postId}`,
                data: {},
                success: function (response) {
                    //카테고리에 해당하는 goods를 가지고 온다.
                    let posts = response['comment']
                    console.log(posts)
                    console.log(response)
                    for (let i = 0; i < posts.length; i++) {
                        const email = posts[i]['email']
                        const comment = posts[i]['comment']
                        const commentid = posts[i]['_id']
                        make_post(comment, email, commentid)
                    }
                }
            })
        }
        function make_post(comment, email, commentid) {
            let temp_html = `
            <tr>
                <td>${email}</td>
                
                <td id="commentInput${commentid}">${comment}</td>
                <td><button class="d-line">취소</button></td>
                <td><button id="commentt${commentid}" onclick="modifyComment('${commentid}')">수정</button></td>
                <td><button class="d-line" onclick="deleteComment('${commentid}')">삭제</button></td>
            </tr>`
            $('#tbody-box').append(temp_html)
        }

        //댓글 수정
            function modifyComment(commentid) {

            if ($(`#commentt${commentid}`).text() === '수정완료') {
                console.log('1',$(`#commentt${commentid}`))
                // 위에 붙여넣는 버튼에 적용
                $.ajax({
                    type: "PATCH",
                    url: `/api/posts/${commentid}`,
                    // contentType: "application/json",
                    headers: {
                        authorization: `Bearer ${localStorage.getItem('token')}`,
                    },
                    data: {
                        comment: $('#newDesc').val(),
                    },
                    success: function (response) {
                        console.log(response)
                        alert(response['msg'])
                        window.location.reload()
                    },
                    error: function (error) {
                        console.log('실패')
                        console.error(error.responseJSON.errorMessage);
                    },
                });
            }
            let baseComment = $(`#commentInput${commentid}`).text()
            // td에서 수정버튼을 눌렀을때 text를 넣어주겠다
            $(`#commentInput${commentid}`).empty()
            $(`#commentInput${commentid}`).append(`<textarea id="newDesc">${baseComment}</textarea>`);
            $(`#commentt${commentid}`).empty()
            $(`#commentt${commentid}`).append(`수정완료`)
        }
    </script>
    <style>
        .card {
            cursor: pointer;
        }

        .html {
            overflow: auto;
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-sm navbar-dark bg-sparta justify-content-end">
        <a class="navbar-brand" href="/">
            <!-- <img src="/static/logo_big_tr.png" width="30" height="30" class="d-inline-block align-top" alt=""> -->
            황인호의 개인 블로그
        </a>
        <button class="navbar-toggler ml-auto" type="button" data-toggle="collapse"
            data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="true"
            aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>
        <div class="navbar-collapse collapse flex-grow-0 ml-auto" id="navbarSupportedContent" style="">
            <ul class="navbar-nav mr-auto text-right">
                <li class="nav-item" id="link-cart">

                    <a class="nav-link" href="/write"> 게시글 작성 </a>

                </li>

            </ul>
        </div>

    </nav>
    <div class="wrap">

        <div class="container">
            <div class="d-flex justify-content-between align-items-end">
                <div>
                    <div>
                        <h3 id="word" style="display: inline;">
                            <%= title %>
                        </h3>
                        <button id="btn-modify" class="btn btn-sparta btn-lg" onclick="modify_post()">
                            <i class="fa fa-pencil" aria-hidden="true"></i>
                        </button>
                    </div>
                    <h5 id="pronunciation" style="display: inline;">
                        <%= user %>
                    </h5>
                    <h6 id="pronunciation" style="display: inline;">
                        <%= createdAt %>
                    </h6>
                </div>

            </div>
            <hr>
            <div id="definitions">
                <div style="padding:10px">
                    <%= content %>
                </div>
                <textarea class="form-control" id="comment" rows="3" onclick="loginCheck()"></textarea>
            </div>
            <div>
                <button id="comment" class="btn btn-sparta btn-lg" onclick="writeComment()">댓글 달기</button>
            </div>
            <table>
                <tbody id="tbody-box">

                </tbody>
            </table>
        </div>


    </div>


</body>

</html>